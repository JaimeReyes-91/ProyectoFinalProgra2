package Formulario;

import javax.swing.JOptionPane;
import Conexion.Conexion;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author dinae
 */
public class Productos extends javax.swing.JFrame {
    Conexion conexionPostgres = new Conexion();
    Connection con;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Productos.class.getName());
    
    public Productos() {
       
        initComponents();
        try{
            con = conexionPostgres.getConexion();
            
        }catch (SQLException e){
            e.getMessage();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        cmbCategoria = new javax.swing.JComboBox<>();
        cmbDisponibilidad = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btnAlta = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnBaja = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PRODUCTOS");

        jLabel2.setText("Id:");

        jLabel3.setText("Nombre");

        jLabel4.setText("Categoria");

        jLabel5.setText("Precio");

        jLabel6.setText("Disponibilidad");

        jLabel7.setText("Stock");

        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "bebidas", "entradas", "platos_principales", "postres", " " }));
        cmbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriaActionPerformed(evt);
            }
        });

        cmbDisponibilidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "disponible", "no disponible" }));
        cmbDisponibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDisponibilidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .addComponent(txtNombre)
                            .addComponent(txtPrecio)
                            .addComponent(txtStock)
                            .addComponent(cmbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbDisponibilidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cmbCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(cmbDisponibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));

        btnAlta.setText("ALTA");
        btnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaActionPerformed(evt);
            }
        });

        btnActualizar.setText("MODIFICACION");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnBaja.setText("BAJA");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        btnConsultar.setText("CONSULTAR");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBaja)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlta)
                    .addComponent(btnActualizar)
                    .addComponent(btnBaja)
                    .addComponent(btnConsultar))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        
        try{
        
        int producto_id = Integer.parseInt(txtId.getText());
        String nombre_producto = txtNombre.getText();
        int categoriaId = 0;
        String categoriaSeleccionada = cmbCategoria.getSelectedItem().toString();

   switch (categoriaSeleccionada) {
    case "bebidas":
        categoriaId = 1;
        break;
    case "entradas":
        categoriaId = 2;
        break;
    case "platos_principales":
        categoriaId = 3;
        break;
    case "postres":
        categoriaId = 4;
        break;
}

        double precio = Double.parseDouble(txtPrecio.getText());
        String disponibilidadSeleccionada = cmbDisponibilidad.getSelectedItem().toString();
        boolean disponibilidad = disponibilidadSeleccionada.equalsIgnoreCase("disponible");
        int stock = Integer.parseInt(txtStock.getText());

    // Consulta SQL para actualizar la tabla productos
    String qry = "UPDATE public.productos " +
                 "SET nombre_producto = ?, categoria_id = ?, precio = ?, disponibilidad = ?, stock = ? " +
                 "WHERE producto_id = ?";

    PreparedStatement ps = con.prepareStatement(qry);
    ps.setString(1, nombre_producto);
    ps.setInt(2, categoriaId);
    ps.setDouble(3, precio);
    ps.setBoolean(4, disponibilidad); 
    ps.setInt(5, stock);
    ps.setInt(6, producto_id);

    int filasActualizadas = ps.executeUpdate();

    if (filasActualizadas > 0) {
        JOptionPane.showMessageDialog(null, "Producto actualizado correctamente.");
    } else {
        JOptionPane.showMessageDialog(null, "No se encontró un producto con el ID " + producto_id);
    }

    ps.close();

} catch (NumberFormatException nfe) {
    JOptionPane.showMessageDialog(null, "Verifica que ID, categoría, precio y stock sean números válidos.");
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error al actualizar: " + e.getMessage());
}
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        try{ 
            int id = Integer.parseInt(txtId.getText().trim());

    String qry = "SELECT * FROM public.productos WHERE producto_id = ?";
    
    try (PreparedStatement ps = con.prepareStatement(qry)) {
        ps.setInt(1, id);
        
        try (ResultSet rs = ps.executeQuery()) {
            if (rs.next()) {
                // Obtener los valores de la base de datos
                String nombreProducto = rs.getString("nombre_producto");
                int categoriaId = rs.getInt("categoria_id");
                double precio = rs.getDouble("precio");
                boolean disponibilidad = rs.getBoolean("disponibilidad");
                int stock = rs.getInt("stock");
                
                // Asignar valores a los JTextFields
                txtNombre.setText(nombreProducto);
                cmbCategoria.setSelectedItem(String.valueOf(categoriaId));
                txtPrecio.setText(String.valueOf(precio));
                cmbDisponibilidad.setSelectedItem(disponibilidad ? "disponible" : "no disponible");
                txtStock.setText(String.valueOf(stock));
                
                JOptionPane.showMessageDialog(this, "Producto encontrado: " + nombreProducto);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el Producto con ID: " + id);
            }
        }
    }
} catch (NumberFormatException nfe) {
    JOptionPane.showMessageDialog(null, "Por favor ingresa un ID válido.");
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error al buscar producto: " + e.getMessage());
}
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaActionPerformed
    try{
            String nombreProducto = txtNombre.getText();
            String categoriaSeleccionada = cmbCategoria.getSelectedItem().toString();
            String precio = txtPrecio.getText();
            String disponibilidadSeleccionada = cmbDisponibilidad.getSelectedItem().toString();
            boolean disponibilidad = disponibilidadSeleccionada.equalsIgnoreCase("disponible");
            String stock = txtStock.getText();
            int categoriaId = 0;
switch (categoriaSeleccionada) {
    case "bebidas":
        categoriaId = 1;
        break;
    case "entradas":
        categoriaId = 2;
        break;
    case "platos_principales":
        categoriaId = 3;
        break;
    case "postres":
        categoriaId = 4;
        break;
}
            
    String qry = "INSERT INTO public.productos(nombre_producto, categoria_id, precio, disponibilidad, stock)" + " VALUES(?,?,?,?,?)";
            
    PreparedStatement ps = con.prepareStatement(qry);
    ps.setString(1, nombreProducto);
    ps.setInt(2, categoriaId);
    ps.setDouble(3, Double.parseDouble(precio));
    ps.setBoolean(4, disponibilidad);
    ps.setInt(5, Integer.parseInt(stock));
            
    int filasInsertadas = ps.executeUpdate();
            
    if (filasInsertadas > 0){
        JOptionPane.showMessageDialog(null, "El registro se ha realizado con éxito.");
    } else {
        JOptionPane.showMessageDialog(null, "No se ha podido insertar el registro.");
    }
                    
}catch (SQLException e){
    JOptionPane.showMessageDialog(null, "Error al insertar: " + e.getMessage());
}
    }//GEN-LAST:event_btnAltaActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        try {
        String id = txtId.getText();
        
    String qry = "DELETE FROM public.productos WHERE producto_id = ?";
    PreparedStatement ps = con.prepareStatement(qry);
    ps.setInt(1, Integer.parseInt(id));
        
    int filasEliminadas = ps.executeUpdate();
        
    if (filasEliminadas > 0){
        JOptionPane.showMessageDialog(null, "Producto eliminado correctamente.");
    } else {
        JOptionPane.showMessageDialog(null, "No se encontró un Producto con ID: " + id);
    }
}catch (NumberFormatException e){
    JOptionPane.showMessageDialog(null, "El ID debe ser un número válido");
}catch (SQLException e){
    e.getMessage();
}
    }//GEN-LAST:event_btnBajaActionPerformed

    private void cmbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCategoriaActionPerformed

    private void cmbDisponibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDisponibilidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDisponibilidadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Productos().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAlta;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JComboBox<String> cmbCategoria;
    private javax.swing.JComboBox<String> cmbDisponibilidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
